close all; clear all;

% line paramters
P1 = [0, 20, 20];
V1 = [40, 0, 0];
P2 = [20, 0, 40];
V2 = [0, 40, 0];

b = 0.5;
a = 0.5;

%a1 = dot(((P2+b*V2)-(P1+a*V1)), V1);
%a2 = dot(((P2+b*V2)-(P1+a*V1)), V2);

x_v2 = V2(1);
y_v2 = V2(2);
z_v2 = V2(3);
x_v1 = V1(1);
y_v1 = V1(2);
z_v1 = V1(3);
x_p2 = P2(1);
y_p2 = P2(2);
z_p2 = P2(3);
x_p1 = P1(1);
y_p1 = P1(2);
z_p1 = P1(3);

% L5
%b1 = b*x_v2*x_v1+b*y_v2*y_v1+b*z_v2*z_v1-a*x_v1*x_v1-a*y_v1*y_v1-a*z_v1*z_v1+x_p2*x_v1-x_p1*x_v1+y_p2*y_v1-y_p1*y_v1+z_p2*z_v1-z_p1*z_v1;
%b2 = b*x_v2*x_v2+b*y_v2*y_v2+b*z_v2*z_v2-a*x_v1*x_v2-a*y_v1*y_v2-a*z_v1*z_v2+x_p2*x_v2-x_p1*x_v2+y_p2*y_v2-y_p1*y_v2+z_p2*z_v2-z_p1*z_v2;

% L6
%c1 = x_p2*x_v1-x_p1*x_v1+y_p2*y_v1-y_p1*y_v1+z_p2*z_v1-z_p1*z_v1 == -b*x_v2*x_v1-b*y_v2*y_v1-b*z_v2*z_v1+a*x_v1*x_v1+a*y_v1*y_v1+a*z_v1*z_v1;
%c2 = x_p2*x_v2-x_p1*x_v2+y_p2*y_v2-y_p1*y_v2+z_p2*z_v2-z_p1*z_v2 == -b*x_v2*x_v2-b*y_v2*y_v2-b*z_v2*z_v2+a*x_v1*x_v2+a*y_v1*y_v2+a*z_v1*z_v2;

% L7
%d1 = x_p2*x_v1-x_p1*x_v1+y_p2*y_v1-y_p1*y_v1+z_p2*z_v1-z_p1*z_v1 == a*(x_v1*x_v1+y_v1*y_v1+z_v1*z_v1 )-b*(x_v2*x_v1+y_v2*y_v1+z_v2*z_v1 )
%d2 = x_p2*x_v2-x_p1*x_v2+y_p2*y_v2-y_p1*y_v2+z_p2*z_v2-z_p1*z_v2 == a*(x_v1*x_v2+y_v1*y_v2+z_v1*z_v2 )-b*(x_v2*x_v2+y_v2*y_v2+z_v2*z_v2 )

% L8
%e1 = x_p2*x_v1-x_p1*x_v1+y_p2*y_v1-y_p1*y_v1+z_p2*z_v1-z_p1*z_v1+b*(x_v2*x_v1+y_v2*y_v1+z_v2*z_v1 ) == a*(x_v1*x_v1+y_v1*y_v1+z_v1*z_v1 )
%e2 = x_p2*x_v2-x_p1*x_v2+y_p2*y_v2-y_p1*y_v2+z_p2*z_v2-z_p1*z_v2-a*(x_v1*x_v2+y_v1*y_v2+z_v1*z_v2 ) == -b*(x_v2*x_v2+y_v2*y_v2+z_v2*z_v2 )

% ?9
%f1 = (x_p2*x_v1-x_p1*x_v1+y_p2*y_v1-y_p1*y_v1+z_p2*z_v1-z_p1*z_v1+b*(x_v2*x_v1+y_v2*y_v1+z_v2*z_v1 ))/(x_v1*x_v1+y_v1*y_v1+z_v1*z_v1 )
%f2 = -(x_p2*x_v2-x_p1*x_v2+y_p2*y_v2-y_p1*y_v2+z_p2*z_v2-z_p1*z_v2-a*(x_v1*x_v2+y_v1*y_v2+z_v1*z_v2 ))/(x_v2*x_v2+y_v2*y_v2+z_v2*z_v2 )

    S1 = dot(P2, V1) - dot(P1, V1);
    S2 = dot(P2, V2) - dot(P1, V2);
    S3 = norm(V2)^2;
    S4 = norm(V1)^2;
    S5 = dot(V2, V1)^2;

% X10
%g1 = (x_p2*x_v1-x_p1*x_v1+y_p2*y_v1-y_p1*y_v1+z_p2*z_v1-z_p1*z_v1-(x_p2*x_v2-x_p1*x_v2+y_p2*y_v2-y_p1*y_v2+z_p2*z_v2-z_p1*z_v2-a*(x_v1*x_v2+y_v1*y_v2+z_v1*z_v2 )^2)/( x_v2*x_v2+y_v2*y_v2+z_v2*z_v2 ))/(x_v1*x_v1+y_v1*y_v1+z_v1*z_v1 )
%g2 = -(x_p2*x_v2-x_p1*x_v2+y_p2*y_v2-y_p1*y_v2+z_p2*z_v2-z_p1*z_v2-(x_p2*x_v1-x_p1*x_v1+y_p2*y_v1-y_p1*y_v1+z_p2*z_v1-z_p1*z_v1+b*(x_v2*x_v1+y_v2*y_v1+z_v2*z_v1 )^2)/(x_v1*x_v1+y_v1*y_v1+z_v1*z_v1 ))/( x_v2*x_v2+y_v2*y_v2+z_v2*z_v2 )
g1 = (S_1*S_3-S_2*S_5)/(S_3*S_4-S_5^2 )
g2 = -(x_p2*x_v2-x_p1*x_v2+y_p2*y_v2-y_p1*y_v2+z_p2*z_v2-z_p1*z_v2-(x_p2*x_v1-x_p1*x_v1+y_p2*y_v1-y_p1*y_v1+z_p2*z_v1-z_p1*z_v1+b*(x_v2*x_v1+y_v2*y_v1+z_v2*z_v1 )^2)/(x_v1*x_v1+y_v1*y_v1+z_v1*z_v1 ))/(x_v2*x_v2+y_v2*y_v2+z_v2*z_v2 )



[T1a, T2a] = test(P1, P2, V1, V2);

% line paramters
P1 = [0, 20, 10];
V1 = [40, 0, 20];
P2 = [20, 0, 30];
V2 = [0, 40, 20];
[T1b, T2b] = test(P1, P2, V1, V2);

% line paramters
P1 = [0, 20, 10];
V1 = [40, 0, 40];
P2 = [20, 0, 30];
V2 = [0, 40, 40];
[T1c, T2c] = test(P1, P2, V1, V2);

function [T1, T2] = test(P1, P2, V1, V2)
    [PI, VI] = linejointV(P1, P2, V1, V2);
    
    % plot
    quiver3(0, 0, 0, P1(1), P1(2), P1(3), 'off', 'm');
    hold on;
    quiver3(0, 0, 0, P2(1), P2(2), P2(3), 'off', 'm');
    quiver3(P1(1), P1(2), P1(3), V1(1), V1(2), V1(3), 'off', 'b');
    quiver3(P2(1), P2(2), P2(3), V2(1), V2(2), V2(3), 'off', 'b');
    quiver3(0, 0, 0, PI(1), PI(2), PI(3), 'off', 'g');
    quiver3(PI(1), PI(2), PI(3), VI(1), VI(2), VI(3), 'off', 'r');
    axis equal

    T1 = dot(VI, V1);
    T2 = dot(VI, V2);
end

function [PI1, VI] = linejointV(P1, P2, V1, V2)
    [a, b] = linejointF(P1, P2, V1, V2);
    
    % construct line
    PI1 = P1 + a*V1;
    PI2 = P2 + b*V2;
    VI = PI2 - PI1;
end

function [a, b] = linejointF(P1, P2, V1, V2)
    
    % solution
    S1 = dot(P2, V1) - dot(P1, V1);
    S2 = dot(P2, V2) - dot(P1, V2);
    S3 = norm(V2)^2;
    S4 = norm(V1)^2;
    S5 = dot(V2, V1)^2;
    
    T1 = (S1*S3-S2);
    T2 = (S3*S4-S5);
    a = T1/T2;
    
    T3 = (S2*S4-S1);
    T4 = (S3*S4-S5);
    b = -T3/T4;
end
